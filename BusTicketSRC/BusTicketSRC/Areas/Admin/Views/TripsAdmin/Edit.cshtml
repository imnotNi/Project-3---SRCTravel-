@model BusTicketSRC.Models.Trip

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Trip</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.trip_id)

    <div class="form-group">
        @Html.LabelFor(model => model.bus_id, "Bus Type:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("bus_id", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.bus_id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.start_location, "Start Location:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.start_location, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.start_location, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.end_location, "End Location:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.end_location, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.end_location, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.distance,"Distance:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.distance, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.distance, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.departure_day, "Departure Day:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.departure_day, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.departure_day, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.departure_time, "Departure Time:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.departure_time, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.departure_time, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price,"Price:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.other_trip_details,"Other Trip Details:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.other_trip_details, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.other_trip_details, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Check if flatpickr is defined
        if (typeof flatpickr === 'undefined') {
            console.error('Flatpickr is not defined. Check if the library is loaded correctly.');
            return;
        }

        // Enable flatpickr for departure_day
        flatpickr("#departure_day", {
            dateFormat: "d/m/Y", // Set the desired date format
            // Set the language to Vietnamese
        });

        // Enable flatpickr for departure_time
        flatpickr("#departure_time", {
            enableTime: true, // Enable time picker
            noCalendar: true, // Hide calendar
            dateFormat: "H:i", // Set the desired time format
            // Set the language to Vietnamese
        });
    });
</script>